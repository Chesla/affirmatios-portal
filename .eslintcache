[{"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/index.js":"1","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/App.js":"2","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reportWebVitals.js":"3","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/homePage.js":"4","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/login.js":"5","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/header.js":"6","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/constants.js":"7","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/index.js":"8","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/userReducer.js":"9","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/index.js":"10","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/history.js":"11","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/userAction.jsx":"12","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/profile.js":"13","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/credentialReducer.js":"14","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/credentials.js":"15","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/credentialAction.jsx":"16","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/notificationReducer.js":"17","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/notifications.js":"18","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/notificationActions.jsx":"19","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/certificate.js":"20","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/experience.js":"21","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/covid.js":"22","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/degree.js":"23","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/connections.js":"24","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/connectionAction.js":"25","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/connectionReducer.js":"26","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/issueCredentials.js":"27","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/degreeForm.js":"28","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/covidForm.js":"29","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/experienceForm.js":"30","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/RequestCredentials.js":"31","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/requestCredentials.js":"32","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/requestNewCredentials.js":"33"},{"size":456,"mtime":1610678442011,"results":"34","hashOfConfig":"35"},{"size":1502,"mtime":1610877769159,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610603389125,"results":"37","hashOfConfig":"35"},{"size":1266,"mtime":1610965381297,"results":"38","hashOfConfig":"35"},{"size":7573,"mtime":1610957094554,"results":"39","hashOfConfig":"35"},{"size":4187,"mtime":1610965378098,"results":"40","hashOfConfig":"35"},{"size":2531,"mtime":1610964762602,"results":"41","hashOfConfig":"35"},{"size":413,"mtime":1610730660161,"results":"42","hashOfConfig":"35"},{"size":1176,"mtime":1610862997354,"results":"43","hashOfConfig":"35"},{"size":923,"mtime":1610972316160,"results":"44","hashOfConfig":"35"},{"size":110,"mtime":1610633072618,"results":"45","hashOfConfig":"35"},{"size":3385,"mtime":1610894753372,"results":"46","hashOfConfig":"35"},{"size":5095,"mtime":1610958915454,"results":"47","hashOfConfig":"35"},{"size":2184,"mtime":1610962217745,"results":"48","hashOfConfig":"35"},{"size":5131,"mtime":1610962854627,"results":"49","hashOfConfig":"35"},{"size":8449,"mtime":1610971594674,"results":"50","hashOfConfig":"35"},{"size":912,"mtime":1610693269209,"results":"51","hashOfConfig":"35"},{"size":5654,"mtime":1610877593981,"results":"52","hashOfConfig":"35"},{"size":4791,"mtime":1610693256984,"results":"53","hashOfConfig":"35"},{"size":2198,"mtime":1610963777733,"results":"54","hashOfConfig":"35"},{"size":7267,"mtime":1610964444312,"results":"55","hashOfConfig":"35"},{"size":3793,"mtime":1610965127148,"results":"56","hashOfConfig":"35"},{"size":4257,"mtime":1610964255762,"results":"57","hashOfConfig":"35"},{"size":7870,"mtime":1610972118241,"results":"58","hashOfConfig":"35"},{"size":5316,"mtime":1610972334935,"results":"59","hashOfConfig":"35"},{"size":1184,"mtime":1610731963657,"results":"60","hashOfConfig":"35"},{"size":8184,"mtime":1610963772938,"results":"61","hashOfConfig":"35"},{"size":11157,"mtime":1610878348718,"results":"62","hashOfConfig":"35"},{"size":10898,"mtime":1610876556937,"results":"63","hashOfConfig":"35"},{"size":15974,"mtime":1610876554994,"results":"64","hashOfConfig":"35"},{"size":7694,"mtime":1610964636003,"results":"65","hashOfConfig":"35"},{"size":7694,"mtime":1610964636003,"results":"66","hashOfConfig":"35"},{"size":9291,"mtime":1610971572998,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1s3r6g",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/index.js",[],["142","143"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/App.js",["144"],"// import logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport './App.css';\nimport HomePage from \"./components/homePage\";\nimport Login from \"./components/login\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport {theme} from \"./constants\";\nimport history from \"./history\";\nconst initialState = window.__WML_REDUX_INITIAL_STATE__;\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\nconst checkAuth = () => {\n  const username = localStorage.getItem(\"username\");\n  const password = localStorage.getItem(\"password\");\n  const pathName = window.location.pathname;\n  if(!pathName.includes(\"login\") && !pathName.includes(\"registration\")){\n    if(!username || !password){\n      history.push(\"/login\");\n    }\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Router history={history}>\n              <Switch>\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/registration\" component={Login} />\n                <Route path=\"/\" component={HomePage} />\n              </Switch>\n            </Router>\n        </div>\n        </ThemeProvider>\n    </Provider>\n\n  );\n}\n\nexport default App;\ncheckAuth();\n","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reportWebVitals.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/homePage.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/login.js",["145","146"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/header.js",["147","148","149","150"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/constants.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/index.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/userReducer.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/index.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/history.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/userAction.jsx",["151"],"import * as Actions from \"../actions\";\nexport const loginUser = (data, actionType) => {\n  return function (dispatch) {\n    let url = \"\";\n    if(actionType === \"login\"){\n        url = `/api/login/${data}`;\n    }else{\n        url = `/api/register/${data}`;\n    }\n    dispatch({\n      type: Actions.LOADER,\n      payload:false\n    })\n    if(actionType === \"login\"){\n      localStorage.setItem(\"username\",data.username);\n      localStorage.setItem(\"password\",data.password);\n      let agentType = process.env.REACT_APP_AGENT?.toLowerCase();\n      let profileInfo = {};\n      if(agentType === \"people\"){\n        profileInfo = {\n          DID: \"QWETVFF\",\n          firstLastName:\"Chesla\",\n          roles:[\"verifier\",\"holder\"],\n          email:\"cheslakar@gmail.com\",\n          mobile:\"+91 9591790442\",\n          type:\"people\",\n          agentType\n        } \n      }else if(agentType === \"medical\"){\n        profileInfo = {\n          DID: \"QWETVFF\",\n          firstLastName:\"Manipal\",\n          roles:[\"verifier\",\"issuer\"],\n          email:\"cheslakar@gmail.com\",\n          mobile:\"+91 9591790442\",\n          type:\"people\",\n          agentType\n        } \n      }else if(agentType === \"school\"){\n        profileInfo = {\n          DID: \"QWETVFF\",\n          firstLastName:\"KIIT\",\n          roles:[\"verifier\",\"issuer\"],\n          email:\"cheslakar@gmail.com\",\n          mobile:\"+91 9591790442\",\n          type:\"people\",\n          agentType\n        } \n      }else{\n        profileInfo = {\n          DID: \"QWETVFF\",\n          firstLastName:\"TCS\",\n          roles:[\"verifier\",\"issuer\"],\n          email:\"cheslakar@gmail.com\",\n          mobile:\"+91 9591790442\",\n          type:\"people\",\n          agentType\n        }\n      }\n      dispatch({\n          type: actionType === \"login\" ? Actions.LOGIN_USER : Actions.REGISTER_USER,\n          payload: {\n              loginAction: true,\n              loginFailureMessage:\"\",\n              profileInfo\n          }\n      });\n    }else{\n      dispatch({\n        type: actionType === \"login\" ? Actions.LOGIN_USER : Actions.REGISTER_USER,\n        payload: {\n          loginAction: false,\n          loginFailureMessage:\"Registration failed, please try again later.\",\n          profileInfo:{}\n        },\n      });\n    }\n  }\n    // return async function (dispatch) {\n    //   const response = await fetch(url, {\n    //     method: \"GET\",\n    //     credentials: \"include\",\n    //   });\n    //   dispatch({\n    //     type: Actions.LOADER,\n    //     payload:false\n    //   })\n    //   if (response.status === 200) {\n    //     localStorage.setItem(\"username\",data.username);\n    //     localStorage.setItem(\"password\",data.password);\n    //     dispatch({\n    //       type: actionType === \"login\" ? Actions.LOGIN_USER : Actions.REGISTER_USER,\n    //       payload: {\n    //           loginAction: true,\n    //       }\n    //     });\n    //   } else {\n    //     dispatch({\n    //       type: actionType === \"login\" ? Actions.LOGIN_USER : Actions.REGISTER_USER,\n    //       payload: false,\n    //     });\n    //   }\n    //   dispatch({\n    //       type: actionType === \"login\" ? Actions.LOGIN_USER : Actions.REGISTER_USER,\n    //       payload: false,\n    //   });\n    // };\n};\n\nexport const loader = (val) => {\n  return {\n    type: Actions.LOADER,\n    payload: val\n  };\n};\nexport const initLoginData = () => {\n  return {\n    type: Actions.INIT_LOGIN_DATA,\n  };\n}\n","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/profile.js",["152","153","154","155"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/credentialReducer.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/credentials.js",["156","157"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/credentialAction.jsx",["158","159","160","161"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/notificationReducer.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/notifications.js",["162","163"],"/* eslint-disable complexity */\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Grid,\n    Button,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport SchoolIcon from '@material-ui/icons/School';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport {\n  loginUser,\n  loader\n} from \"../actions/userAction\";\nimport {\n    getAllNotifications,\n    actionOnNotification\n} from \"../actions/notificationActions\";\nconst Notifications = (props) => {\n  const dispatch = useDispatch();\n  const profileInfo = useSelector(\n    (state) => state.user.profileInfo\n  );\n  const notifications = useSelector(\n    (state) => state.notification.notifications\n  );\n  const showLoader = useSelector(\n    (state) => state.user.loader\n  );\n  const errorMessage = useSelector(\n    (state) => state.notification.errorMessage\n  );\n  const login = () => {\n    const username = localStorage.getItem(\"username\");\n    const password = localStorage.getItem(\"password\");\n    if(username && password && Object.keys(profileInfo).length === 0){\n        let param = {\n            username,\n            password,\n        };\n        dispatch(loader(true));\n        dispatch(loginUser(param , \"login\"));\n    }\n  }\n  const fetchAllNotifications = () => {\n    let param = profileInfo.DID;\n    dispatch(loader(true));\n    dispatch(getAllNotifications(param));\n  }\n  useEffect(()=>{\n    if(Object.keys(profileInfo).length === 0){\n        login();\n    }else{\n        fetchAllNotifications();\n    }\n  },[]);\n  useEffect(()=>{\n    if(Object.keys(profileInfo).length !== 0){\n        fetchAllNotifications();\n    }\n  },[profileInfo]);\n  const setProfilePic = (type) => {\n    type = type?.toLowerCase();\n      switch(type){\n        case \"medical\" : return <LocalHospitalIcon style={{ fontSize: 40 }}/>\n        case \"school\" : return <SchoolIcon style={{ fontSize: 40 }}/>\n        case \"business\" : return <BusinessIcon style={{ fontSize: 40 }}/>\n        default : return null;\n      }\n  }\n  const notificationAction = (e) => {\n        let actionType = e.currentTarget.name;\n        let  notificationid = e.currentTarget.getAttribute(\"notificationid\")\n        let param = {\n            DID: profileInfo.DID,\n            notificationid\n        }\n        dispatch(loader(true));\n        dispatch(actionOnNotification(actionType, param));\n  }\n  const showNotifications = () => {\n    return (notifications||[]).map((n)=>{\n        return(\n            <Grid\n              container\n              spacing={2}\n              alignItems={\"center\"}\n              key={n.requesterId}\n              className={\"notifications-border\"}\n            >\n                <Grid item xs={4} md={1}>\n                    <div className=\"image-container\">\n                        {setProfilePic(n.requesterType)}\n                    </div>\n                </Grid>\n                <Grid item xs={4} md={9}>\n                    <Grid\n                        container\n                        spacing={2}\n                        alignItems={\"center\"}\n                    >\n                        <Grid item xs={12} md={12}>\n                            <div className=\"requester-name\">\n                                {n.requesterName}\n                            </div>\n                        </Grid> \n                        <Grid item xs={12} md={12}>\n                            <div className=\"requester-info\">\n                                {n.requestedData && n.requestedData.message ? n.requestedData.message : \"\"}\n                            </div>\n                        </Grid> \n                        <Grid item xs={12} md={12}>\n                            <div className=\"requester-time\">\n                                {`Requested on: ${n.requestedTime}`} \n                            </div>\n                        </Grid> \n                    </Grid>\n                </Grid>\n                <Grid item xs={4} md={1}>\n                    <Button\n                        variant=\"contained\"\n                        className=\"full-width\"\n                        name=\"approve\"\n                        notificationid={n.requesterId}\n                        onClick={notificationAction}\n                    >\n                        APPROVE\n                    </Button>\n                </Grid>\n                <Grid item xs={4} md={1}>\n                    <Button\n                        variant=\"contained\"\n                        className=\"full-width\"\n                        name=\"reject\"\n                        notificationid={n.requesterId}\n                        onClick={notificationAction}\n                    >\n                        REJECT\n                    </Button>\n                </Grid>\n            </Grid>\n        )\n    })\n  }\n  return (\n    <React.Fragment>\n        {showLoader ? (\n        <div className={\"loader-parent\"}>\n            <div className={\"loader-container\"}>\n            <CircularProgress size={50} left={0} top={0} />\n            </div>\n        </div>\n        ) : null}\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n        <Card className=\"layout-card\">\n          <CardHeader title={\"Notifications\"}/>\n          <CardContent className=\"certificate-grid\">\n            {notifications === null || notifications.length === 0? \n            <div>No Notifications Available.</div>\n            :\n            showNotifications()}\n          </CardContent>\n        </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/notificationActions.jsx",["164","165"],"import * as Actions from \".\";\nexport const getAllNotifications = (data) => {\n  return function (dispatch) {\n    let url = `/api/getAllNotifications/${data}`;\n    dispatch({\n      type: Actions.LOADER,\n      payload:false\n    })\n    let actionType = true;\n    if(actionType){\n      let notifications = [{\n            requestedData: {\n                message: \"Requesting for name.\",\n                param:[\"aadharNo\"]\n            },\n            requesterId:\"123\",\n            requesterName:\"Manipal Hospital\",\n            requestedTime:\"12/10/2020 10:10:00\",\n            requesterType:\"Medical\",\n        },\n        {\n            requestedData: {\n                message: \"Requesting for aadhar number.\",\n                param:[\"aadharNo\"]\n            },\n            requesterId:\"1234\",\n            requesterName:\"Manipal Hospital\",\n            requestedTime:\"12/10/2020 10:10:00\",\n            requesterType:\"Medical\",\n        },\n        {\n            requestedData: {\n                message: \"Requesting for registration number.\",\n                param:[\"registrationNo\"]\n            },\n            requesterId:\"12345\",\n            requesterName:\"KIIT University\",\n            requestedTime:\"05/10/2014 12:00:00\",\n            requesterType:\"School\",\n        },\n        {\n            requestedData: {\n                message: \"Requesting for employee id.\",\n                param:[\"employeeId\"]\n            },\n            requesterId:\"123456\",\n            requesterName:\"Tata Consultancy Services\",\n            requestedTime:\"10/15/2015 15:00:00\",\n            requesterType:\"Business\",\n        },\n        {\n            requestedData: {\n                message: \"Requesting for details of Joining date, Release date, Designation from previous company experience letter.\",\n                param:[\"joiningDate, releaseDate, designation\"]\n            },\n            requesterId:\"1234567\",\n            requesterName:\"Walmart\",\n            requestedTime:\"10/15/2015 15:00:00\",\n            requesterType:\"Business\",\n        },\n     ]\n      dispatch({\n          type: Actions.GET_ALL_NOTIFICATIONS,\n          payload: {\n              errorMessage:'',\n              notifications\n          }\n      });\n    }else{\n      dispatch({\n        type:  Actions.GET_ALL_NOTIFICATIONS,\n        payload: {\n          errorMessage:'Some error occured. Please try again later',\n          notifications:[]\n        }\n      });\n    }\n  }\n//   return async function (dispatch) {\n//     const response = await fetch(url, {\n//       method: \"GET\",\n//       notifications: \"include\",\n//     });\n//     dispatch({\n//       type: Actions.LOADER,\n//       payload:false\n//     })\n//     if (response.status === 200) {\n//         dispatch({\n//             type: Actions.GET_ALL_NOTIFICATIONS,\n//             payload: {\n//                 errorMessage:'',\n//                 notifications: data.notifications\n//             }\n//         });\n//     } else {\n//         dispatch({\n//             type:  Actions.GET_ALL_NOTIFICATIONS,\n//             payload: {\n//               errorMessage:'Some error occured. Please try again later',\n//               notifications:[]\n//             }\n//         });\n//     }\n//   };\n}\nexport const actionOnNotification = (type, data) => {\n    return function (dispatch) {\n      let url = `/api/actionOnNotification/${type}/${data}`;\n      let actionType = true;\n      if(actionType){\n        dispatch({\n            type: Actions.NOTIFICATION_ACTION,\n            payload: {\n                errorMessage:'',\n                notificationAction:true\n            }\n        });\n        dispatch(getAllNotifications(data.DID));\n      }else{\n        dispatch({\n          type:  Actions.NOTIFICATION_ACTION,\n          payload: {\n            errorMessage:'Some error occured. Please try again later',\n            notificationAction:false\n          }\n        });\n        dispatch({\n            type: Actions.LOADER,\n            payload:false\n        })\n      }\n    }\n  //   return async function (dispatch) {\n  //     const response = await fetch(url, {\n  //       method: \"GET\",\n  //       notifications: \"include\",\n  //     });\n  //     dispatch({\n  //       type: Actions.LOADER,\n  //       payload:false\n  //     })\n  //     if (response.status === 200) {\n            // dispatch({\n            //     type: Actions.GET_ALL_NOTIFICATIONS,\n            //     payload: {\n            //         errorMessage:'',\n            //         notificationAction:true\n            //     }\n            // });\n  //     } else {\n  //         dispatch({\n            //   type:  Actions.GET_ALL_NOTIFICATIONS,\n            //   payload: {\n            //     errorMessage:'Some error occured. Please try again later',\n            //     notificationAction:false\n            //   }\n    //      });\n  //     }\n  //   };\n  }","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/certificate.js",["166","167"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/experience.js",["168"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/covid.js",["169"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/degree.js",["170"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/connections.js",["171","172","173","174"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/actions/connectionAction.js",["175","176"],"import * as Actions from \"../actions\";\nexport const getAllConnections = (data) => {\n  return function (dispatch) {\n    let url = `/api/getAllConnections/${data}`;\n    dispatch({\n      type: Actions.LOADER,\n      payload:false\n    })\n    let actionType = true;\n    let connections = [];\n    if(actionType){\n      let agentType = process.env.REACT_APP_AGENT?.toLowerCase();\n      if(agentType !== \"people\"){\n        connections = [{\n          identity: \"QWETVFF\",\n          name:\"Chesla\",\n          type:\"people\",\n          verify:true\n        },\n        {\n          identity: \"QWETSFF\",\n          name:\"Shubh\",\n          type:\"people\",\n          verify:false\n        },\n        {\n          identity: \"QWETVFFSD\",\n          name:\"Arun\",\n          type:\"people\",\n          verify:true\n        },\n        {\n          identity: \"QWETVfFFSD\",\n          name:\"Pratap\",\n          type:\"people\",\n          verify:true\n        }  ]\n      }else{\n        connections = [{\n          identity: \"QWETVFF\",\n          name:\"Manipal Hospital\",\n          type:\"Medical\",\n          verify:true\n        },\n        {\n          identity: \"QWETSFF\",\n          name:\"KIIT University\",\n          type:\"School\",\n          verify:false\n        },\n        {\n          identity: \"QWETVFFSD\",\n          name:\"Tata Consultancy Services\",\n          type:\"Business\",\n          verify:true\n        } ]\n      }\n      \n      dispatch({\n          type: Actions.GET_ALL_CONNECTIONS,\n          payload: {\n              errorMessage:'',\n              connections\n          }\n      });\n    }else{\n      dispatch({\n        type:  Actions.GET_ALL_CONNECTIONS,\n        payload: {\n          errorMessage:'Some error occured. Please try again later',\n          connections:[]\n        }\n      });\n    }\n  }\n//   return async function (dispatch) {\n//     const response = await fetch(url, {\n//       method: \"GET\",\n//       certificates: \"include\",\n//     });\n//     dispatch({\n//       type: Actions.LOADER,\n//       payload:false\n//     })\n//     if (response.status === 200) {\n//         dispatch({\n//             type: Actions.GET_ALL_CONNECTIONS,\n//             payload: {\n//                 errorMessage:'',\n//                 connections: data.connections\n//             }\n//         });\n//     } else {\n//         dispatch({\n//             type:  Actions.GET_ALL_CONNECTIONS,\n//             payload: {\n//               errorMessage:'Some error occured. Please try again later',\n//               connections:[]\n//             }\n//         });\n//     }\n//   };\n}\n\nexport const verifyParticularConnection = (data) => {\n    return function (dispatch) {\n      let url = `/api/verifyConnection/${data}`;\n      dispatch({\n        type: Actions.LOADER,\n        payload:false\n      })\n      let actionType = true;\n      if(actionType){\n        dispatch({\n            type: Actions.VERIFY_CONNECTION,\n            payload: {\n                errorMessage:'',\n                connectionVerified:true\n            }\n        });\n      }else{\n        dispatch({\n          type:  Actions.VERIFY_CONNECTION,\n          payload: {\n            errorMessage:'Some error occured. Please try again later.',\n            connectionVerified:false\n          }\n        });\n      }\n    }\n  //   return async function (dispatch) {\n  //     const response = await fetch(url, {\n  //       method: \"GET\",\n  //       certificates: \"include\",\n  //     });\n  //     dispatch({\n  //       type: Actions.LOADER,\n  //       payload:false\n  //     })\n  //     if (response.status === 200) {\n  //         dispatch({\n  //             type: Actions.VERIFY_CONNECTION,\n  //             payload: {\n  //                 errorMessage:'',\n  //                 connections: data.connections\n  //             }\n  //         });\n  //     } else {\n  //         dispatch({\n  //             type:  Actions.VERIFY_CONNECTION,\n  //             payload: {\n  //               errorMessage:'Some error occured. Please try again later',\n  //               connections:[]\n  //             }\n  //         });\n  //     }\n  //   };\n  }\n\nexport const setConnectionMessage = (connectionVerified,errorMessage) => {\n    return {\n      type: Actions.SET_CONNECTION_MESSAGE,\n      payload:{\n        connectionVerified,\n        errorMessage\n      }\n    };\n}\n\nexport const sendConnectionRequest = () => {\n  return function (dispatch) {\n      dispatch({\n        type: Actions.SEND_CONNECTION_REQUEST,\n        payload: {\n            errorMessage:'',\n        }\n      })\n  }\n  // return async function (dispatch) {\n    //     const response = await fetch(url, {\n    //       method: \"GET\",\n    //       certificates: \"include\",\n    //     });\n    //     dispatch({\n    //       type: Actions.LOADER,\n    //       payload:false\n    //     })\n    //     if (response.status === 200) {\n    //         dispatch({\n    //             type: Actions.VERIFY_CONNECTION,\n    //             payload: {\n    //                 errorMessage:'',\n    //                 connections: data.connections\n    //             }\n    //         });\n    //     } else {\n    //         dispatch({\n    //             type:  Actions.VERIFY_CONNECTION,\n    //             payload: {\n    //               errorMessage:'Some error occured. Please try again later',\n    //               connections:[]\n    //             }\n    //         });\n    //     }\n    //   };\n}","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/reducers/connectionReducer.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/issueCredentials.js",["177","178"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/degreeForm.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/covidForm.js",[],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/experienceForm.js",["179"],"/* eslint-disable complexity */\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Grid,\n    CardActions,\n    Button,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    FormHelperText,\n    TextField\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TCS from \"../images/tcslogo.png\";\nimport PropTypes from \"prop-types\";\n\nconst ExperienceForm = (props) => {\n    const [experienceParam ,setExperienceParam] = useState({\n        ownerName: props.profileName,\n        verificationId:\"\",\n        certificateName:\"\",\n        name:props.connectionName,\n        designation:\"\",\n        department:\"\",\n        doj:\"\",\n        dol:\"\",\n        gender:\"\",\n        reason:\"\",\n        remarks:\"\",\n        location:\"\",\n        issuedOn:\"\",\n        issuedBy:\"\",\n        issuedByTeam:\"\"\n    })\n    const [experienceParamError ,setExperienceParamError] = useState({\n        ownerName: false,\n        verificationId:false,\n        certificateName:false,\n        name:false,\n        designation:false,\n        department:false,\n        doj:false,\n        dol:false,\n        gender:false,\n        reason:false,\n        remarks:false,\n        location:false,\n        issuedOn:false,\n        issuedBy:false,\n        issuedByTeam:false\n    })\n    const setExperienceCredentials = (e) => {\n        setExperienceParam({ ...experienceParam, ...{ [e.target.name]: e.target.value } });\n    }\n    const issueCertificate = () => {\n        let param = {};\n        let passCheck = true;\n        for(let i in experienceParam){\n            if(!!experienceParam[i]){\n                param[i]= false;\n            }else{\n                passCheck = false;\n                param[i]= true;\n            }\n        }\n        setExperienceParamError(param);\n        if(passCheck){\n            console.log(\"experienceParam\",experienceParam);\n            props.submitCredentialForm(experienceParam);\n        }\n    }\n    return (\n        <React.Fragment>\n        <Card>\n          <CardHeader \n            title={<img src={TCS} className={\"office-logo\"} alt={props.profileName}/>}/>\n          <CardContent className=\"degree-grid-form\">\n            <Grid\n              container\n              spacing={2}\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              style={{textAlign:\"right\"}}\n            >\n               <Grid item xs={6} md={4}>\n                    <TextField \n                        id=\"verificationId\" \n                        name=\"verificationId\"\n                        value={experienceParam.verificationId}\n                        onChange={setExperienceCredentials}\n                        placeholder={\"eg: TCS/EMP/834930\"}\n                        error={experienceParamError.verificationId}\n                        helperText={\n                            experienceParamError.verificationId ? \"Please enter employee no.\" : \"\"\n                        }/> \n               </Grid>\n            </Grid>\n            <Grid\n              container\n              spacing={2}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n               <Grid item xs={12} md={12}>\n               <Grid item xs={12} md={12} >\n                    <div className={\"degree-certificate-name\"}>\n                        <TextField \n                            id=\"certificateName\" \n                            name=\"certificateName\"\n                            onChange={setExperienceCredentials}\n                            value={experienceParam.certificateName}\n                            error={experienceParamError.certificateName}\n                            helperText={\n                                experienceParamError.certificateName ? \"Please enter certificate name.\" : \"\"\n                            }\n                            placeholder={\"eg: Service Certificate\"}/>\n                    </div>\n               </Grid>\n               </Grid>\n            </Grid>\n            <Grid\n              container\n              spacing={2}\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              style={{textAlign:\"left\"}}\n            >\n               <Grid item xs={12} md={12}>\n                   This is to certify that <b>{props.connectionName}</b> was employed by us and \n                   <FormControl>\n                        <InputLabel id=\"demo-gender-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"demo-gender-label\"\n                                id=\"gender\"\n                                name=\"gender\"\n                                value={experienceParam.gender}\n                                onChange={setExperienceCredentials}\n                                >\n                                <MenuItem value={\"M\"}>Male</MenuItem>\n                                <MenuItem value={\"F\"}>Female</MenuItem>\n                            </Select>\n                    </FormControl>\n                   {experienceParamError.gender && <FormHelperText>Please select gender.</FormHelperText>}\n                   {experienceParam.gender===\"F\" ? \" her \" : \" his \"} \n                   particulars of service are as under:\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               1. Name\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <b>{props.connectionName}</b>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               2. Designation\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"designation\" \n                                    name=\"designation\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.designation}\n                                    error={experienceParamError.designation}\n                                    helperText={\n                                        experienceParamError.designation ? \"Please enter designation.\" : \"\"\n                                    }\n                                    placeholder={\"eg: CSIS\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               3. Department\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"department\" \n                                    name=\"department\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.department}\n                                    error={experienceParamError.department}\n                                    helperText={\n                                        experienceParamError.department ? \"Please enter department name.\" : \"\"\n                                    }\n                                    placeholder={\"eg: CSIS\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               4. Date of Joining\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"doj\" \n                                    name=\"doj\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.doj}\n                                    error={experienceParamError.doj}\n                                    helperText={\n                                        experienceParamError.doj ? \"Please enter date of joining.\" : \"\"\n                                    }\n                                    placeholder={\"eg: 06/16/2014\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               5. Date of Leaving\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"dol\" \n                                    name=\"dol\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.dol}\n                                    error={experienceParamError.dol}\n                                    helperText={\n                                        experienceParamError.dol ? \"Please enter date of leaving.\" : \"\"\n                                    }\n                                    placeholder={\"eg: 09/11/2015\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               6. Reason of Leaving\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"reason\" \n                                    name=\"reason\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.reason}\n                                    error={experienceParamError.reason}\n                                    helperText={\n                                        experienceParamError.reason ? \"Please enter reason.\" : \"\"\n                                    }\n                                    placeholder={\"eg: Resigned\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                        >\n                           <Grid item xs={6} md={4}>\n                               7. Remarks\n                            </Grid> \n                            <Grid item xs={6} md={8}>\n                                <TextField \n                                    id=\"remarks\" \n                                    name=\"remarks\"\n                                    onChange={setExperienceCredentials}\n                                    value={experienceParam.remarks}\n                                    error={experienceParamError.remarks}\n                                    helperText={\n                                        experienceParamError.remarks ? \"Please enter remarks.\" : \"\"\n                                    }\n                                    placeholder={\"eg: Remarks\"}/>\n                            </Grid> \n                    </Grid>\n               </Grid>\n               <Grid item xs={12} md={12}>\n                    <Grid\n                        container\n                        spacing={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={6} md={4}>\n                            Dated\n                        </Grid> \n                        <Grid item xs={6} md={8}>\n                         <TextField \n                                id=\"issuedOn\" \n                                name=\"issuedOn\"\n                                value={experienceParam.issuedOn}\n                                onChange={setExperienceCredentials}\n                                placeholder={\"eg: 12/14/2020\"}\n                                error={experienceParamError.issuedOn}\n                                helperText={\n                                    experienceParamError.issuedOn ? \"Please enter issued on date.\" : \"\"\n                                }/>\n                    </Grid> \n                    </Grid>\n               </Grid>\n            </Grid>\n            <Grid\n              container\n              spacing={2}\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              style={{textAlign:\"right\"}}\n            >\n               <Grid item xs={6} md={4}>\n                    <TextField \n                            id=\"issuedBy\" \n                            name=\"issuedBy\"\n                            value={experienceParam.issuedBy}\n                            onChange={setExperienceCredentials}\n                            placeholder={\"Issuer name\"}\n                            error={experienceParamError.issuedBy}\n                            helperText={\n                                experienceParamError.issuedBy ? \"Please enter issuer name.\" : \"\"\n                            }/>\n                </Grid>\n            </Grid>\n            <Grid\n              container\n              spacing={2}\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              style={{textAlign:\"right\"}}\n            >\n                <Grid item xs={6} md={4}>\n                    <TextField \n                            id=\"issuedByTeam\" \n                            name=\"issuedByTeam\"\n                            value={experienceParam.issuedByTeam}\n                            onChange={setExperienceCredentials}\n                            placeholder={\"Issuer department\"}\n                            error={experienceParamError.issuedByTeam}\n                            helperText={\n                                experienceParamError.issuedByTeam ? \"Please enter issuer department.\" : \"\"\n                            }/>\n                </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions>\n            <Button\n                variant=\"contained\"\n                className=\"full-width\"\n                onClick={issueCertificate}\n            >\n                Issue certificate\n            </Button>\n          </CardActions>\n        </Card>\n    </React.Fragment>\n    );\n};\n\nexport default ExperienceForm;\n\n\nExperienceForm.propTypes = {\n    connectionName: PropTypes.string,\n    profileName: PropTypes.string,\n    submitCredentialForm: PropTypes.func\n  };","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/RequestCredentials.js",["180","181","182"],"/* eslint-disable complexity */\nimport React, { useEffect } from \"react\";\nimport Degree from './degree';\nimport Covid from './covid';\nimport Experience from './experience';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n    loginUser,\n    loader\n  } from \"../actions/userAction\";\n  import {\n    getCertificateDetails\n  } from \"../actions/credentialAction\";\nconst RequestCredentials = (props) => {\n    const dispatch = useDispatch();\n    const profileInfo = useSelector(\n        (state) => state.user.profileInfo\n    );\n    const errorMessage = useSelector(\n        (state) => state.credential.errorMessage\n    );\n    const fetchCertificateDetails = () => {\n        let param = {\n            DID: profileInfo.DID,\n            credentialId: props.match.params.id\n        }\n        dispatch(loader(true));\n        dispatch(getCertificateDetails(param, props.match.params.type));\n    }\n    const login = () => {\n        const username = localStorage.getItem(\"username\");\n        const password = localStorage.getItem(\"password\");\n        if(username && password && Object.keys(profileInfo).length === 0){\n            let param = {\n                username,\n                password,\n            };\n            dispatch(loader(true));\n            dispatch(loginUser(param , \"login\"));\n        }\n    }\n    useEffect(()=>{\n        if(Object.keys(profileInfo).length === 0){\n            login();\n        }else{\n            fetchCertificateDetails();\n        }\n    },[]);\n    useEffect(()=>{\n        if(Object.keys(profileInfo).length !== 0){\n            fetchCertificateDetails();\n        }\n    },[profileInfo]);\n    \n    const showCertificate = () => {\n        let type = (props.match.params.type||\"\").toLowerCase();\n        switch(type){\n                case \"medical\" : return <Covid/>;\n                case \"school\" : return <Degree/>;\n                case \"business\" : return <Experience/>;\n                default : return null;\n        }\n    }\n    return (\n      <React.Fragment>\n        {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n            Details of {props.match.params.name?.toUpperCase()} are\n            \n      </React.Fragment>\n    );\n};\n\nexport default RequestCredentials;\n\n\n","/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/requestCredentials.js",["183","184"],"/Users/c0k0363/Documents/Projects/affirmatios-portal/src/components/requestNewCredentials.js",["185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":6,"column":3,"nodeType":"194","messageId":"195","endLine":6,"endColumn":11},{"ruleId":"196","severity":1,"message":"197","line":101,"column":5,"nodeType":"198","endLine":101,"endColumn":19,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":114,"column":5,"nodeType":"198","endLine":114,"endColumn":30,"suggestions":"201"},{"ruleId":"192","severity":1,"message":"202","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":21},{"ruleId":"192","severity":1,"message":"203","line":4,"column":23,"nodeType":"194","messageId":"195","endLine":4,"endColumn":34},{"ruleId":"192","severity":1,"message":"204","line":7,"column":35,"nodeType":"194","messageId":"195","endLine":7,"endColumn":38},{"ruleId":"192","severity":1,"message":"205","line":7,"column":40,"nodeType":"194","messageId":"195","endLine":7,"endColumn":49},{"ruleId":"192","severity":1,"message":"206","line":8,"column":9,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"196","severity":1,"message":"207","line":46,"column":5,"nodeType":"198","endLine":46,"endColumn":7,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":51,"column":33,"nodeType":"211","endLine":51,"endColumn":78},{"ruleId":"209","severity":1,"message":"210","line":52,"column":32,"nodeType":"211","endLine":52,"endColumn":74},{"ruleId":"209","severity":1,"message":"210","line":53,"column":34,"nodeType":"211","endLine":53,"endColumn":75},{"ruleId":"196","severity":1,"message":"212","line":59,"column":5,"nodeType":"198","endLine":59,"endColumn":7,"suggestions":"213"},{"ruleId":"196","severity":1,"message":"214","line":64,"column":5,"nodeType":"198","endLine":64,"endColumn":18,"suggestions":"215"},{"ruleId":"192","severity":1,"message":"206","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"192","severity":1,"message":"206","line":138,"column":9,"nodeType":"194","messageId":"195","endLine":138,"endColumn":12},{"ruleId":"192","severity":1,"message":"206","line":195,"column":9,"nodeType":"194","messageId":"195","endLine":195,"endColumn":12},{"ruleId":"192","severity":1,"message":"206","line":286,"column":9,"nodeType":"194","messageId":"195","endLine":286,"endColumn":12},{"ruleId":"196","severity":1,"message":"216","line":61,"column":5,"nodeType":"198","endLine":61,"endColumn":7,"suggestions":"217"},{"ruleId":"196","severity":1,"message":"218","line":66,"column":5,"nodeType":"198","endLine":66,"endColumn":18,"suggestions":"219"},{"ruleId":"192","severity":1,"message":"206","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"192","severity":1,"message":"206","line":109,"column":11,"nodeType":"194","messageId":"195","endLine":109,"endColumn":14},{"ruleId":"196","severity":1,"message":"220","line":49,"column":7,"nodeType":"198","endLine":49,"endColumn":9,"suggestions":"221"},{"ruleId":"196","severity":1,"message":"222","line":54,"column":7,"nodeType":"198","endLine":54,"endColumn":20,"suggestions":"223"},{"ruleId":"196","severity":1,"message":"224","line":22,"column":7,"nodeType":"198","endLine":22,"endColumn":9,"suggestions":"225"},{"ruleId":"196","severity":1,"message":"226","line":21,"column":5,"nodeType":"198","endLine":21,"endColumn":7,"suggestions":"227"},{"ruleId":"196","severity":1,"message":"228","line":22,"column":7,"nodeType":"198","endLine":22,"endColumn":9,"suggestions":"229"},{"ruleId":"196","severity":1,"message":"230","line":86,"column":5,"nodeType":"198","endLine":86,"endColumn":7,"suggestions":"231"},{"ruleId":"196","severity":1,"message":"232","line":91,"column":5,"nodeType":"198","endLine":91,"endColumn":18,"suggestions":"233"},{"ruleId":"196","severity":1,"message":"200","line":98,"column":5,"nodeType":"198","endLine":98,"endColumn":39,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":149,"column":33,"nodeType":"237","endLine":149,"endColumn":62},{"ruleId":"192","severity":1,"message":"206","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"192","severity":1,"message":"206","line":107,"column":11,"nodeType":"194","messageId":"195","endLine":107,"endColumn":14},{"ruleId":"196","severity":1,"message":"238","line":101,"column":7,"nodeType":"198","endLine":101,"endColumn":9,"suggestions":"239"},{"ruleId":"196","severity":1,"message":"232","line":106,"column":7,"nodeType":"198","endLine":106,"endColumn":20,"suggestions":"240"},{"ruleId":"192","severity":1,"message":"202","line":17,"column":10,"nodeType":"194","messageId":"195","endLine":17,"endColumn":21},{"ruleId":"196","severity":1,"message":"220","line":49,"column":7,"nodeType":"198","endLine":49,"endColumn":9,"suggestions":"241"},{"ruleId":"196","severity":1,"message":"222","line":54,"column":7,"nodeType":"198","endLine":54,"endColumn":20,"suggestions":"242"},{"ruleId":"192","severity":1,"message":"243","line":56,"column":11,"nodeType":"194","messageId":"195","endLine":56,"endColumn":26},{"ruleId":"196","severity":1,"message":"244","line":69,"column":7,"nodeType":"198","endLine":69,"endColumn":9,"suggestions":"245"},{"ruleId":"196","severity":1,"message":"246","line":74,"column":7,"nodeType":"198","endLine":74,"endColumn":20,"suggestions":"247"},{"ruleId":"192","severity":1,"message":"248","line":17,"column":9,"nodeType":"194","messageId":"195","endLine":17,"endColumn":23},{"ruleId":"196","severity":1,"message":"230","line":206,"column":7,"nodeType":"198","endLine":206,"endColumn":9,"suggestions":"249"},{"ruleId":"196","severity":1,"message":"232","line":211,"column":7,"nodeType":"198","endLine":211,"endColumn":20,"suggestions":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["254"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'login' and 'profileInfo'. Either include them or remove the dependency array.",["255"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchAllCredentials', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'fetchAllCredentials'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'fetchAllNotifications', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'fetchAllNotifications'. Either include it or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'fetchCertificateDetails', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'fetchCertificateDetails'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'props.readFrom'. Either include it or remove the dependency array. If 'setExperienceLetter' needs the current value of 'props.readFrom', you can also switch to useReducer instead of useState and read 'props.readFrom' in the reducer.",["262"],"React Hook useEffect has a missing dependency: 'props.readFrom'. Either include it or remove the dependency array. If 'setCovidLetter' needs the current value of 'props.readFrom', you can also switch to useReducer instead of useState and read 'props.readFrom' in the reducer.",["263"],"React Hook useEffect has a missing dependency: 'props.readFrom'. Either include it or remove the dependency array. If 'setDegreeLetter' needs the current value of 'props.readFrom', you can also switch to useReducer instead of useState and read 'props.readFrom' in the reducer.",["264"],"React Hook useEffect has missing dependencies: 'fetchAllConnections', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'fetchAllConnections'. Either include it or remove the dependency array.",["266"],["267"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'dispatch', 'fetchAllConnections', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["268"],["269"],["270"],["271"],"'showCertificate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchRequestedCertificateDetails', 'login', and 'profileInfo'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'fetchRequestedCertificateDetails'. Either include it or remove the dependency array.",["273"],"'FormHelperText' is defined but never used.",["274"],["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"294","fix":"296"},{"desc":"294","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"300","fix":"306"},{"desc":"290","fix":"307"},{"desc":"292","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"298","fix":"313"},{"desc":"300","fix":"314"},"Update the dependencies array to be: [loginSuccess, props.history]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, props.location.pathname]",{"range":"317","text":"318"},"Update the dependencies array to be: [login, profileInfo]",{"range":"319","text":"320"},"Update the dependencies array to be: [fetchAllCredentials, login, profileInfo]",{"range":"321","text":"322"},"Update the dependencies array to be: [fetchAllCredentials, profileInfo]",{"range":"323","text":"324"},"Update the dependencies array to be: [fetchAllNotifications, login, profileInfo]",{"range":"325","text":"326"},"Update the dependencies array to be: [fetchAllNotifications, profileInfo]",{"range":"327","text":"328"},"Update the dependencies array to be: [fetchCertificateDetails, login, profileInfo]",{"range":"329","text":"330"},"Update the dependencies array to be: [fetchCertificateDetails, profileInfo]",{"range":"331","text":"332"},"Update the dependencies array to be: [props.readFrom]",{"range":"333","text":"334"},{"range":"335","text":"334"},{"range":"336","text":"334"},"Update the dependencies array to be: [fetchAllConnections, login, profileInfo]",{"range":"337","text":"338"},"Update the dependencies array to be: [fetchAllConnections, profileInfo]",{"range":"339","text":"340"},"Update the dependencies array to be: [errorMessage, connectionVerified, dispatch]",{"range":"341","text":"342"},"Update the dependencies array to be: [dispatch, fetchAllConnections, login, profileInfo]",{"range":"343","text":"344"},{"range":"345","text":"340"},{"range":"346","text":"330"},{"range":"347","text":"332"},"Update the dependencies array to be: [fetchRequestedCertificateDetails, login, profileInfo]",{"range":"348","text":"349"},"Update the dependencies array to be: [fetchRequestedCertificateDetails, profileInfo]",{"range":"350","text":"351"},{"range":"352","text":"338"},{"range":"353","text":"340"},[3282,3296],"[loginSuccess, props.history]",[3535,3560],"[dispatch, props.location.pathname]",[1235,1237],"[login, profileInfo]",[1626,1628],"[fetchAllCredentials, login, profileInfo]",[1737,1750],"[fetchAllCredentials, profileInfo]",[1683,1685],"[fetchAllNotifications, login, profileInfo]",[1796,1809],"[fetchAllNotifications, profileInfo]",[1511,1513],"[fetchCertificateDetails, login, profileInfo]",[1642,1655],"[fetchCertificateDetails, profileInfo]",[601,603],"[props.readFrom]",[532,534],[587,589],[2383,2385],"[fetchAllConnections, login, profileInfo]",[2494,2507],"[fetchAllConnections, profileInfo]",[2691,2725],"[errorMessage, connectionVerified, dispatch]",[3458,3460],"[dispatch, fetchAllConnections, login, profileInfo]",[3585,3598],[1518,1520],[1649,1662],[2256,2258],"[fetchRequestedCertificateDetails, login, profileInfo]",[2396,2409],"[fetchRequestedCertificateDetails, profileInfo]",[7705,7707],[7832,7845]]